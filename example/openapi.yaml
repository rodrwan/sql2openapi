openapi: 3.0.0
info:
  title: Generated API
  version: 1.0.0
paths:
  /login:
    post:
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required: []
  /posts:
    get:
      summary: Get all posts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/posts'
                required: []
    post:
      summary: Create new posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts'
              required: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/posts'
                required: []
      security:
      - bearerAuth: []
  /posts/{id}:
    get:
      summary: Get posts by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/posts'
                required: []
    put:
      summary: Update posts by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts'
              required: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/posts'
                required: []
    delete:
      summary: Delete posts by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
  /register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
              required: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
                required: []
  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
                required: []
    post:
      summary: Create new users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
              required: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
                required: []
      security:
      - bearerAuth: []
  /users/{id}:
    get:
      summary: Get users by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
                required: []
      security:
      - bearerAuth: []
    put:
      summary: Update users by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
              required: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
                required: []
      security:
      - bearerAuth: []
    delete:
      summary: Delete users by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /users/{id}/posts:
    get:
      summary: List posts by users ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts'
                  required: []
                required: []
components:
  schemas:
    posts:
      type: object
      properties:
        content:
          type: string
        id:
          type: integer
          format: int32
        title:
          type: string
        user_id:
          type: integer
          format: int32
          description: Foreign key to users.id
      required:
      - id
    users:
      type: object
      properties:
        age:
          type: integer
          format: int32
        email:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
      required:
      - id
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
